package geometry;

import utility.Color;
import utility.Origin;
import utility.Ray;

public class Cone extends GeometricObject
{
	public Origin center;
	public double radius;
	
	public Cone(Origin center,double radius,Color color)
	{
		this.center = new Origin(center);
		this.radius = radius;
		this.color = new Color(color);
	}
	
	public double hit(Ray ray)
	{
		Origin oriCyl = ray.ori.sub(center);
		
		double rad = Math.sin(Math.toRadians(radius)).pow(2.0);
		
		double a = ray.dir.x * ray.dir.x + ray.dir.z * ray.dir.z;
		double b = 2.0 * (ray.dir.x * oriCyl.x + ray.dir.z * oriCyl.z);
		double c = oriCyl.x * oriCyl.x + oriCyl.z * oriCyl.z - radius * radius;
		Quadratic equation = new Quadratic(a, b ,c);
		
		if (equation.hasSolution() == false)
			t = 0.0;
		else if (equation.getHighestS() > 10E-9)
			t = equation.getHighestS();
		return (t);
	}
	
	
	
	
	
	
	
	dir = (t_point){r.dir.x, r.dir.y, r.dir.z};
    pos = vector_sub(r.pos, obj->pos);
    vec_rotate(&pos, obj->rot);
    vec_rotate(&dir, obj->rot);
    radius = sin(ft_degtorad(obj->radius)) * sin(ft_degtorad(obj->radius));
    poly.x = dir.x * dir.x - dir.y * dir.y + dir.z * dir.z;
    poly.y = 2.0 * (pos.x * dir.x - pos.y * dir.y + pos.z * dir.z);
    poly.z = pos.x * pos.x - pos.y * pos.y + pos.z * pos.z;
}
